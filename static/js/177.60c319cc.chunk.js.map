{"version":3,"file":"static/js/177.60c319cc.chunk.js","mappings":"0LACA,EAA0B,yBAA1B,EAAiE,6BAAjE,EAAuG,wBAAvG,EAAwI,wBAAxI,EAA0K,yB,mBCY1K,EAVoB,SAACA,GAClB,IAAIC,EAAO,WAAaD,EAAME,GAC9B,OACGC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAW,GAAKA,EAASC,UACtCC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,GAAIR,EAAKK,SAAA,CAAC,IAAEN,EAAMU,KAAK,QAGzC,ECMA,G,QAbgB,SAACV,GAGd,OACGG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAUC,SAEtBN,EAAMW,SAIhB,G,sCCoBMC,GAAcC,EAAAA,EAAAA,GAAiB,IAe/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,qBAAjBD,EAdL,SAACf,GAErB,OACGO,EAAAA,EAAAA,MAAA,QAAMU,SAAUjB,EAAMkB,aAAaZ,SAAA,EAChCH,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,EAAUX,GAAcF,KAAK,qBAC7Dc,YAAY,wBACnBrB,EAAAA,EAAAA,KAAA,OAAAG,UACGH,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,aAKpB,IAIA,EAzCgB,SAACN,GACd,IAAMyB,EAAQzB,EAAM0B,YAEdC,EAAgBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI3B,EAAAA,EAAAA,KAAC4B,EAAW,CAAYrB,KAAMoB,EAAEpB,KAAMR,GAAI4B,EAAE5B,IAA1B4B,EAAE5B,GAA6B,IAExF8B,EAAkBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI/B,EAAAA,EAAAA,KAACgC,EAAO,CAAYxB,QAASuB,EAAEvB,SAAjBuB,EAAEhC,GAAyB,IAMzF,OACGK,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAUC,SAAA,EACvBH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,SAC1BqB,KAEJpB,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAUC,SAAA,EACvBC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAK,IAAE0B,EAAgB,QACvB7B,EAAAA,EAAAA,KAACW,EAAmB,CAACG,SAXP,SAACmB,GACrBpC,EAAMqC,cAAcD,EAAOE,mBAC9B,SAaH,E,oBCWA,GAAeC,E,QAAAA,KACZC,EAAAA,EAAAA,KArBqB,SAACf,GACtB,MAAO,CACJC,YAAaD,EAAMC,YAEzB,IAE2B,SAACe,GACzB,MAAO,CACJJ,cAAe,SAACC,GACbG,GAASC,EAAAA,EAAAA,GAAkBJ,GAC9B,EAEN,IAUGK,EAAAA,EAFH,CAEqBC,E,kJCvCfC,EAA6B,SAACpB,GACjC,MAAO,CACJqB,OAAQrB,EAAMsB,KAAKD,OAIzB,EACaH,EAAmB,SAACK,GAAe,IACvCC,EAAiB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAK,EAAAA,EAAAA,GAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CAMnB,OANmBC,EAAAA,EAAAA,GAAAR,EAAA,EAAAS,IAAA,SAAAC,MAEpB,WACG,OAAKC,KAAK5D,MAAM8C,QAET3C,EAAAA,EAAAA,KAAC6C,GAASa,EAAAA,EAAAA,GAAA,GAAKD,KAAK5D,SAFIG,EAAAA,EAAAA,KAAC2D,EAAAA,GAAQ,CAACrD,GAAG,UAG/C,KAACwC,CAAA,CANmB,CAASc,EAAAA,WAYhC,OAAOvB,EAAAA,EAAAA,IAAQK,EAARL,CAAoCS,EAC9C,C","sources":["webpack://react-first-project/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__d26uN\",\"dialogsItem\":\"Dialogs_dialogsItem__Uj578\",\"dialog\":\"Dialogs_dialog__JM0XT\",\"active\":\"Dialogs_active__mWhHs\",\"message\":\"Dialogs_message__IV4KX\"};","import s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) => {\r\n   let path = 'dialogs/' + props.id;\r\n   return (\r\n      <div className={s.dialog + '' + s.active}>\r\n         <NavLink to={path}> {props.name} </NavLink>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default DialogsItem;","import s from './../Dialogs.module.css'\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n\r\n\r\n   return (\r\n      <div className={s.message}>\r\n\r\n         {props.message}\r\n\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Message;","import s from './Dialogs.module.css'\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControl/FormControl\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n   const state = props.dialogsPage\r\n\r\n   const dialogElement = state.dialogs.map(d => <DialogsItem key={d.id} name={d.name} id={d.id}/>)\r\n\r\n   const messagesElement = state.messages.map(m => <Message key={m.id} message={m.message}/>)\r\n\r\n   const addSendMessage = (values) => {\r\n      props.onSendMessage(values.newSendMessageBody)\r\n   }\r\n\r\n   return (\r\n      <div className={s.dialogs}>\r\n         <div className={s.dialogsItem}>\r\n            {dialogElement}\r\n         </div>\r\n         <div className={s.message}>\r\n            <div> {messagesElement} </div>\r\n            <AddMessageFormRedux onSubmit={addSendMessage}/>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\nconst AddMessageForm = (props) => {\r\n\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <Field component={Textarea} validate={[required, maxLength30]} name='newSendMessageBody'\r\n                placeholder='Enter your message'/>\r\n         <div>\r\n            <button>Send</button>\r\n         </div>\r\n      </form>\r\n\r\n   )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'AddMessageDialogs'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import {addMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n// const DialogsContainer = (props) => {\r\n//    const state = props.store.getState().dialogsPage;\r\n//    const onSendMessage = () => {\r\n//       props.store.dispatch(addMessageCreator())\r\n//    };\r\n//    const onNewMassageChange = (newMessageText) => {\r\n//\r\n//       props.store.dispatch(updateMessageCreator(newMessageText))\r\n//    };\r\n//\r\n//    return (\r\n//       <Dialogs onNewMassageChange={onNewMassageChange} onSendMessage={onSendMessage} dialogsPage={state}/>\r\n//    )\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      dialogsPage: state.dialogsPage,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      onSendMessage: (newSendMessageBody) => {\r\n         dispatch(addMessageCreator(newSendMessageBody))\r\n      }\r\n   }\r\n}\r\n\r\n// const AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n//\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n//\r\n// export default DialogsContainer;\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, mapDispatchToProps),\r\n   withAuthRedirect)(Dialogs)","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n   return {\r\n      isAuth: state.auth.isAuth\r\n   }\r\n\r\n\r\n}\r\nexport const withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n\r\n      render() {\r\n         if (!this.props.isAuth) return <Navigate to='/login'/>\r\n\r\n         return <Component {...this.props}/>\r\n      }\r\n\r\n   }\r\n\r\n   // const ConnectWithAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n   return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}\r\n\r\n"],"names":["props","path","id","_jsx","className","s","children","_jsxs","NavLink","to","name","message","maxLength30","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogElement","dialogs","map","d","DialogsItem","messagesElement","messages","m","Message","values","onSendMessage","newSendMessageBody","compose","connect","dispatch","addMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","Navigate","React"],"sourceRoot":""}